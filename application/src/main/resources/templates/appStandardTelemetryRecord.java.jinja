///
/// Autogenerated via corfu message generator. Do NOT edit!
///
package {{ package }};

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import {{ app_standard_telemetry_binary_name }};
import {{ corfu_property_binary_name }};

// internal imports
{% for element in record_elements -%}
{% if element.corfu_type == "OBJECT" %}import {{ package }}.{{ element.java_type }};
{% endif %}{% endfor %}
import java.math.BigInteger;
import java.util.BitSet;

/**
 * Represents the standard telemetry of the app "{{ raw_name }}" from the Corfu configuration.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public record {{ uppercamelcase_name }}StandardTelemetry(
{% for element in record_elements -%}
{% if element.count == 1 and element.corfu_type == "OBJECT" %}		@JsonProperty @CorfuProperty {{ element.java_type }}{{ element.is_array ? "[]" : "" }} {{ element.lowercamelcase_name }}{{ loop.revindex0 > 0 ? "," : "" }}
{% elif element.count == 1 %}		@JsonProperty @CorfuProperty(CorfuProperty.Type.{{ element.corfu_type }}) {{ element.java_type }}{{ element.is_array ? "[]" : "" }} {{ element.lowercamelcase_name }}{{ loop.revindex0 > 0 ? "," : "" }}
{% elif element.corfu_type == "OBJECT" %}		@JsonProperty @CorfuProperty(count = {{ element.count }}) {{ element.java_type }}{{ element.is_array ? "[]" : "" }} {{ element.lowercamelcase_name }}{{ loop.revindex0 > 0 ? "," : "" }}
{% else %}		@JsonProperty @CorfuProperty(value = CorfuProperty.Type.{{ element.corfu_type }}, count = {{ element.count }}) {{ element.java_type }}{{ element.is_array ? "[]" : "" }} {{ element.lowercamelcase_name }}{{ loop.revindex0 > 0 ? "," : "" }}
{% endif %}{% endfor -%}
) implements AppStandardTelemetry {
}
